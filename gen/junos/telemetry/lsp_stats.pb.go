// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lsp_stats.proto

package telemetry

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
// Top-level message
//
type LspStats struct {
	// List of LSP statistics records
	LspStatsRecords      []*LspStatsRecord `protobuf:"bytes,1,rep,name=lsp_stats_records,json=lspStatsRecords" json:"lsp_stats_records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LspStats) Reset()         { *m = LspStats{} }
func (m *LspStats) String() string { return proto.CompactTextString(m) }
func (*LspStats) ProtoMessage()    {}
func (*LspStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc5e73ce6e34840, []int{0}
}
func (m *LspStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LspStats.Unmarshal(m, b)
}
func (m *LspStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LspStats.Marshal(b, m, deterministic)
}
func (m *LspStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LspStats.Merge(m, src)
}
func (m *LspStats) XXX_Size() int {
	return xxx_messageInfo_LspStats.Size(m)
}
func (m *LspStats) XXX_DiscardUnknown() {
	xxx_messageInfo_LspStats.DiscardUnknown(m)
}

var xxx_messageInfo_LspStats proto.InternalMessageInfo

func (m *LspStats) GetLspStatsRecords() []*LspStatsRecord {
	if m != nil {
		return m.LspStatsRecords
	}
	return nil
}

//
// LSP statistics record
//
type LspStatsRecord struct {
	// Name of the LSP
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// Instance Identifier for cases when RPD creates multiple instances
	InstanceIdentifier *uint32 `protobuf:"varint,2,req,name=instance_identifier,json=instanceIdentifier" json:"instance_identifier,omitempty"`
	// Name of the counter. This is useful when an LSP has multiple counters.
	// When an LSP is resignalled, it is possible that a new counter is
	// created in the hardware.
	CounterName *string `protobuf:"bytes,3,req,name=counter_name,json=counterName" json:"counter_name,omitempty"`
	// The total number of packets
	Packets *uint64 `protobuf:"varint,4,opt,name=packets" json:"packets,omitempty"`
	// The total number of bytes
	Bytes *uint64 `protobuf:"varint,5,opt,name=bytes" json:"bytes,omitempty"`
	// Packet rate computed over the most recent 3 second interval
	PacketRate *uint64 `protobuf:"varint,6,opt,name=packet_rate,json=packetRate" json:"packet_rate,omitempty"`
	// Byte rate computed over the most recent 3 second interval
	ByteRate             *uint64  `protobuf:"varint,7,opt,name=byte_rate,json=byteRate" json:"byte_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LspStatsRecord) Reset()         { *m = LspStatsRecord{} }
func (m *LspStatsRecord) String() string { return proto.CompactTextString(m) }
func (*LspStatsRecord) ProtoMessage()    {}
func (*LspStatsRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc5e73ce6e34840, []int{1}
}
func (m *LspStatsRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LspStatsRecord.Unmarshal(m, b)
}
func (m *LspStatsRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LspStatsRecord.Marshal(b, m, deterministic)
}
func (m *LspStatsRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LspStatsRecord.Merge(m, src)
}
func (m *LspStatsRecord) XXX_Size() int {
	return xxx_messageInfo_LspStatsRecord.Size(m)
}
func (m *LspStatsRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_LspStatsRecord.DiscardUnknown(m)
}

var xxx_messageInfo_LspStatsRecord proto.InternalMessageInfo

func (m *LspStatsRecord) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LspStatsRecord) GetInstanceIdentifier() uint32 {
	if m != nil && m.InstanceIdentifier != nil {
		return *m.InstanceIdentifier
	}
	return 0
}

func (m *LspStatsRecord) GetCounterName() string {
	if m != nil && m.CounterName != nil {
		return *m.CounterName
	}
	return ""
}

func (m *LspStatsRecord) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *LspStatsRecord) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

func (m *LspStatsRecord) GetPacketRate() uint64 {
	if m != nil && m.PacketRate != nil {
		return *m.PacketRate
	}
	return 0
}

func (m *LspStatsRecord) GetByteRate() uint64 {
	if m != nil && m.ByteRate != nil {
		return *m.ByteRate
	}
	return 0
}

var E_JnprLspStatisticsExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*LspStats)(nil),
	Field:         5,
	Name:          "jnpr_lsp_statistics_ext",
	Tag:           "bytes,5,opt,name=jnpr_lsp_statistics_ext",
	Filename:      "lsp_stats.proto",
}

func init() {
	proto.RegisterType((*LspStats)(nil), "LspStats")
	proto.RegisterType((*LspStatsRecord)(nil), "LspStatsRecord")
	proto.RegisterExtension(E_JnprLspStatisticsExt)
}

func init() { proto.RegisterFile("lsp_stats.proto", fileDescriptor_edc5e73ce6e34840) }

var fileDescriptor_edc5e73ce6e34840 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4f, 0x32, 0x31,
	0x10, 0x86, 0xb3, 0x0b, 0x7c, 0x40, 0xf7, 0x53, 0x62, 0x31, 0xa1, 0xea, 0xc1, 0x0d, 0x07, 0xb3,
	0x27, 0x0e, 0x1c, 0x3c, 0xe8, 0xc5, 0x98, 0x18, 0xa3, 0x31, 0x1c, 0x96, 0x93, 0xa7, 0x66, 0x5d,
	0xc6, 0xa4, 0x02, 0x6d, 0xd3, 0x19, 0x22, 0x5c, 0xfd, 0x13, 0xfe, 0x5d, 0xd3, 0x2d, 0x8b, 0xeb,
	0x71, 0x9e, 0xf7, 0x99, 0xb7, 0xcd, 0xb0, 0xc1, 0x0a, 0xad, 0x44, 0x2a, 0x08, 0x27, 0xd6, 0x19,
	0x32, 0xe7, 0x43, 0x82, 0x15, 0xac, 0x81, 0xdc, 0x4e, 0x92, 0xb1, 0x01, 0x8e, 0x1f, 0x59, 0xef,
	0x05, 0xed, 0xdc, 0x6b, 0xfc, 0x96, 0x9d, 0x1c, 0x76, 0xa4, 0x83, 0xd2, 0xb8, 0x05, 0x8a, 0x28,
	0x6d, 0x65, 0xc9, 0x74, 0x30, 0xa9, 0xad, 0xbc, 0xe2, 0xb9, 0x6f, 0x6f, 0xcc, 0x38, 0xfe, 0x8e,
	0xd9, 0xf1, 0x5f, 0x87, 0x9f, 0xb1, 0xb6, 0x2e, 0xd6, 0x20, 0xa2, 0x34, 0xce, 0xfa, 0xf7, 0x9d,
	0xaf, 0xbb, 0xb8, 0x17, 0xe5, 0x15, 0xe2, 0xd7, 0x6c, 0xa8, 0x34, 0x52, 0xa1, 0x4b, 0x90, 0x6a,
	0x01, 0x9a, 0xd4, 0xbb, 0x02, 0x27, 0xe2, 0x34, 0xce, 0x8e, 0x6a, 0x93, 0xd7, 0xc6, 0xd3, 0x41,
	0xe0, 0x19, 0xfb, 0x5f, 0x9a, 0x8d, 0x26, 0x70, 0xb2, 0xaa, 0x6e, 0x35, 0xab, 0x93, 0x7d, 0x34,
	0xf3, 0x2f, 0x5c, 0xb2, 0xae, 0x2d, 0xca, 0x25, 0x10, 0x8a, 0x76, 0x1a, 0x65, 0xed, 0x4a, 0x12,
	0x51, 0x5e, 0x53, 0x7e, 0xc1, 0x3a, 0x6f, 0x3b, 0x02, 0x14, 0x9d, 0x66, 0x1c, 0x18, 0xbf, 0x62,
	0x49, 0xf0, 0xa4, 0x2b, 0x08, 0xc4, 0xbf, 0xa6, 0xc2, 0x42, 0x92, 0x17, 0x04, 0x7c, 0xcc, 0xfa,
	0x7e, 0x21, 0x58, 0xdd, 0xa6, 0xd5, 0xf3, 0xdc, 0x3b, 0x37, 0xaf, 0x6c, 0xf4, 0xa1, 0xad, 0x93,
	0xf5, 0x6d, 0x15, 0x92, 0x2a, 0x51, 0xc2, 0x96, 0xf8, 0x68, 0xf2, 0xbc, 0xd1, 0xca, 0x82, 0x9b,
	0x01, 0x7d, 0x1a, 0xb7, 0xc4, 0x39, 0x68, 0x34, 0x2e, 0xfc, 0x29, 0x99, 0xf6, 0x7f, 0xaf, 0x7e,
	0xea, 0x2b, 0xf6, 0x53, 0x28, 0x78, 0xd8, 0xd2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xba, 0x3a,
	0x53, 0xe1, 0xe4, 0x01, 0x00, 0x00,
}
