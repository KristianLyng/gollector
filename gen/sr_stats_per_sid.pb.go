// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sr_stats_per_sid.proto

package gen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
// Top-level message
//
type SrStatsPerSid struct {
	// List of SR stats per SID records (ingress only as of now)
	SidStats             []*SegmentRoutingRecord `protobuf:"bytes,1,rep,name=sid_stats,json=sidStats" json:"sid_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SrStatsPerSid) Reset()         { *m = SrStatsPerSid{} }
func (m *SrStatsPerSid) String() string { return proto.CompactTextString(m) }
func (*SrStatsPerSid) ProtoMessage()    {}
func (*SrStatsPerSid) Descriptor() ([]byte, []int) {
	return fileDescriptor_1859f114623bccc6, []int{0}
}

func (m *SrStatsPerSid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrStatsPerSid.Unmarshal(m, b)
}
func (m *SrStatsPerSid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrStatsPerSid.Marshal(b, m, deterministic)
}
func (m *SrStatsPerSid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrStatsPerSid.Merge(m, src)
}
func (m *SrStatsPerSid) XXX_Size() int {
	return xxx_messageInfo_SrStatsPerSid.Size(m)
}
func (m *SrStatsPerSid) XXX_DiscardUnknown() {
	xxx_messageInfo_SrStatsPerSid.DiscardUnknown(m)
}

var xxx_messageInfo_SrStatsPerSid proto.InternalMessageInfo

func (m *SrStatsPerSid) GetSidStats() []*SegmentRoutingRecord {
	if m != nil {
		return m.SidStats
	}
	return nil
}

//
// SR statistics record
//
type SegmentRoutingRecord struct {
	// Name of the SID
	SidIdentifier *string `protobuf:"bytes,1,req,name=sid_identifier,json=sidIdentifier" json:"sid_identifier,omitempty"`
	// Instance Identifier for cases when RPD creates multiple instances
	InstanceIdentifier *uint32 `protobuf:"varint,2,opt,name=instance_identifier,json=instanceIdentifier" json:"instance_identifier,omitempty"`
	// Name of the counter. This is useful when an SR label has multiple counters.
	// For some scenarios like routing restart, it is possible that a new counter is
	// created in the hardware.
	CounterName *string `protobuf:"bytes,3,opt,name=counter_name,json=counterName" json:"counter_name,omitempty"`
	// Ingress Traffic statistics
	IngressStats *SegmentRoutingStats `protobuf:"bytes,4,opt,name=ingress_stats,json=ingressStats" json:"ingress_stats,omitempty"`
	// Egress statistics
	EgressStats          *SegmentRoutingStats `protobuf:"bytes,5,opt,name=egress_stats,json=egressStats" json:"egress_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SegmentRoutingRecord) Reset()         { *m = SegmentRoutingRecord{} }
func (m *SegmentRoutingRecord) String() string { return proto.CompactTextString(m) }
func (*SegmentRoutingRecord) ProtoMessage()    {}
func (*SegmentRoutingRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_1859f114623bccc6, []int{1}
}

func (m *SegmentRoutingRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentRoutingRecord.Unmarshal(m, b)
}
func (m *SegmentRoutingRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentRoutingRecord.Marshal(b, m, deterministic)
}
func (m *SegmentRoutingRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentRoutingRecord.Merge(m, src)
}
func (m *SegmentRoutingRecord) XXX_Size() int {
	return xxx_messageInfo_SegmentRoutingRecord.Size(m)
}
func (m *SegmentRoutingRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentRoutingRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentRoutingRecord proto.InternalMessageInfo

func (m *SegmentRoutingRecord) GetSidIdentifier() string {
	if m != nil && m.SidIdentifier != nil {
		return *m.SidIdentifier
	}
	return ""
}

func (m *SegmentRoutingRecord) GetInstanceIdentifier() uint32 {
	if m != nil && m.InstanceIdentifier != nil {
		return *m.InstanceIdentifier
	}
	return 0
}

func (m *SegmentRoutingRecord) GetCounterName() string {
	if m != nil && m.CounterName != nil {
		return *m.CounterName
	}
	return ""
}

func (m *SegmentRoutingRecord) GetIngressStats() *SegmentRoutingStats {
	if m != nil {
		return m.IngressStats
	}
	return nil
}

func (m *SegmentRoutingRecord) GetEgressStats() *SegmentRoutingStats {
	if m != nil {
		return m.EgressStats
	}
	return nil
}

type SegmentRoutingStats struct {
	// Packet and Byte statistics
	Packets *uint64 `protobuf:"varint,1,opt,name=packets" json:"packets,omitempty"`
	Bytes   *uint64 `protobuf:"varint,2,opt,name=bytes" json:"bytes,omitempty"`
	// Rates of the above counters.
	PacketRate           *uint64  `protobuf:"varint,3,opt,name=packet_rate,json=packetRate" json:"packet_rate,omitempty"`
	ByteRate             *uint64  `protobuf:"varint,4,opt,name=byte_rate,json=byteRate" json:"byte_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentRoutingStats) Reset()         { *m = SegmentRoutingStats{} }
func (m *SegmentRoutingStats) String() string { return proto.CompactTextString(m) }
func (*SegmentRoutingStats) ProtoMessage()    {}
func (*SegmentRoutingStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_1859f114623bccc6, []int{2}
}

func (m *SegmentRoutingStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentRoutingStats.Unmarshal(m, b)
}
func (m *SegmentRoutingStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentRoutingStats.Marshal(b, m, deterministic)
}
func (m *SegmentRoutingStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentRoutingStats.Merge(m, src)
}
func (m *SegmentRoutingStats) XXX_Size() int {
	return xxx_messageInfo_SegmentRoutingStats.Size(m)
}
func (m *SegmentRoutingStats) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentRoutingStats.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentRoutingStats proto.InternalMessageInfo

func (m *SegmentRoutingStats) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *SegmentRoutingStats) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

func (m *SegmentRoutingStats) GetPacketRate() uint64 {
	if m != nil && m.PacketRate != nil {
		return *m.PacketRate
	}
	return 0
}

func (m *SegmentRoutingStats) GetByteRate() uint64 {
	if m != nil && m.ByteRate != nil {
		return *m.ByteRate
	}
	return 0
}

var E_JnprSrStatsPerSidExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*SrStatsPerSid)(nil),
	Field:         16,
	Name:          "jnpr_sr_stats_per_sid_ext",
	Tag:           "bytes,16,opt,name=jnpr_sr_stats_per_sid_ext",
	Filename:      "sr_stats_per_sid.proto",
}

func init() {
	proto.RegisterType((*SrStatsPerSid)(nil), "SrStatsPerSid")
	proto.RegisterType((*SegmentRoutingRecord)(nil), "SegmentRoutingRecord")
	proto.RegisterType((*SegmentRoutingStats)(nil), "SegmentRoutingStats")
	proto.RegisterExtension(E_JnprSrStatsPerSidExt)
}

func init() { proto.RegisterFile("sr_stats_per_sid.proto", fileDescriptor_1859f114623bccc6) }

var fileDescriptor_1859f114623bccc6 = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x3f, 0xcf, 0xd3, 0x30,
	0x10, 0x87, 0xe5, 0xbc, 0xad, 0x68, 0x2f, 0xcd, 0x2b, 0xe4, 0x16, 0x08, 0x30, 0x10, 0x65, 0x40,
	0x19, 0x50, 0x86, 0x0e, 0x20, 0x98, 0x10, 0x88, 0x01, 0x86, 0x57, 0xc8, 0xf9, 0x00, 0x26, 0x24,
	0x47, 0x65, 0x4a, 0xec, 0xc8, 0xbe, 0x8a, 0x76, 0xe5, 0x63, 0xb0, 0xf0, 0x55, 0x51, 0xe2, 0xfe,
	0x49, 0xab, 0xea, 0x1d, 0xf3, 0xbb, 0xe7, 0xb9, 0xf8, 0x4e, 0x07, 0x8f, 0x9d, 0x95, 0x8e, 0x4a,
	0x72, 0xb2, 0x45, 0x2b, 0x9d, 0xaa, 0xf3, 0xd6, 0x1a, 0x32, 0xcf, 0xe6, 0x84, 0xbf, 0xb0, 0x41,
	0xb2, 0x3b, 0x49, 0xa6, 0xf5, 0x61, 0xfa, 0x11, 0xa2, 0xc2, 0x16, 0x1d, 0xfd, 0x15, 0x6d, 0xa1,
	0x6a, 0xbe, 0x84, 0xa9, 0x53, 0xb5, 0x6f, 0x10, 0xb3, 0xe4, 0x26, 0x0b, 0x97, 0x8f, 0xf2, 0x02,
	0x57, 0x0d, 0x6a, 0x12, 0x66, 0x43, 0x4a, 0xaf, 0x04, 0x56, 0xc6, 0xd6, 0x62, 0xe2, 0x54, 0xdd,
	0x9b, 0xe9, 0xdf, 0x00, 0x16, 0xd7, 0x10, 0xfe, 0x0a, 0x6e, 0xbb, 0x66, 0xaa, 0x46, 0x4d, 0xea,
	0x87, 0x42, 0x1b, 0xb3, 0x24, 0xc8, 0xa6, 0x1f, 0xc6, 0x7f, 0xde, 0x07, 0x13, 0x26, 0x22, 0xa7,
	0xea, 0xcf, 0xc7, 0x1a, 0x7f, 0x0d, 0x73, 0xa5, 0x1d, 0x95, 0xba, 0xc2, 0xa1, 0x12, 0x24, 0x2c,
	0x8b, 0x0e, 0x0a, 0x3f, 0x10, 0x03, 0x2f, 0x83, 0x59, 0x65, 0x36, 0x9a, 0xd0, 0x4a, 0x5d, 0x36,
	0x18, 0xdf, 0x24, 0xec, 0xf4, 0x8f, 0x70, 0x5f, 0xba, 0x2b, 0x1b, 0xe4, 0x6f, 0x21, 0x52, 0x7a,
	0x65, 0xd1, 0xb9, 0xfd, 0x80, 0xa3, 0x84, 0x65, 0xe1, 0x72, 0x71, 0x31, 0x60, 0x3f, 0x95, 0x98,
	0xed, 0xd1, 0xfe, 0x8b, 0xbf, 0x81, 0x19, 0x0e, 0xcd, 0xf1, 0x3d, 0x66, 0x88, 0x27, 0x31, 0xfd,
	0xc7, 0x60, 0x7e, 0x05, 0xe2, 0x2f, 0xe0, 0x41, 0x5b, 0x56, 0x6b, 0xec, 0xd7, 0xcc, 0xb2, 0x51,
	0xff, 0xe0, 0x98, 0x89, 0x43, 0xca, 0x9f, 0xc3, 0xf8, 0xfb, 0x8e, 0xd0, 0xf5, 0x0b, 0x38, 0x96,
	0x7d, 0xc6, 0x5f, 0x42, 0xe8, 0x39, 0x69, 0x4b, 0xf2, 0x23, 0x7b, 0x24, 0x61, 0x02, 0x7c, 0x45,
	0x94, 0x84, 0x3c, 0x85, 0x69, 0x27, 0x78, 0x6a, 0x34, 0xa4, 0x26, 0x5d, 0xde, 0x31, 0xef, 0xbe,
	0xc1, 0xd3, 0x9f, 0xba, 0xb5, 0xf2, 0xf2, 0x6e, 0x24, 0x6e, 0x89, 0x3f, 0xc9, 0xbf, 0x6c, 0xb4,
	0x6a, 0xd1, 0xde, 0x21, 0xfd, 0x36, 0x76, 0xed, 0x0a, 0xd4, 0xce, 0x58, 0x17, 0x3f, 0xec, 0x17,
	0x70, 0x9b, 0x9f, 0x9d, 0x8f, 0x58, 0x74, 0x9d, 0xce, 0xa2, 0x4f, 0x5b, 0xfa, 0x1f, 0x00, 0x00,
	0xff, 0xff, 0xb6, 0x79, 0x88, 0x52, 0x93, 0x02, 0x00, 0x00,
}
